# Generated by Django 4.0.4 on 2022-05-15 07:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CutScene',
            fields=[
                ('ID', models.IntegerField(auto_created=True, editable=False, primary_key=True, serialize=False, unique=True)),
                ('Type', models.TextField(null=True)),
                ('FileName', models.TextField(null=True)),
                ('Desc', models.TextField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('ID', models.IntegerField(auto_created=True, editable=False, primary_key=True, serialize=False, unique=True)),
                ('Category', models.TextField(null=True)),
                ('Action', models.TextField(null=True)),
                ('Weight', models.FloatField(null=True)),
                ('Score', models.FloatField(null=True)),
                ('Type', models.TextField(null=True)),
                ('Contents', models.TextField(null=True)),
                ('Desc', models.TextField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EvaluationAction',
            fields=[
                ('ID', models.IntegerField(auto_created=True, editable=False, primary_key=True, serialize=False, unique=True)),
                ('Action', models.TextField(null=True)),
                ('Desc', models.TextField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FDSFile',
            fields=[
                ('ID', models.IntegerField(auto_created=True, editable=False, primary_key=True, serialize=False, unique=True)),
                ('Version', models.IntegerField(null=True)),
                ('DataType', models.TextField(null=True)),
                ('DeviceType', models.TextField(null=True)),
                ('StartTime', models.FloatField(null=True)),
                ('EndTime', models.FloatField(null=True)),
                ('FileName', models.TextField(null=True)),
                ('Desc', models.TextField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sound',
            fields=[
                ('ID', models.IntegerField(auto_created=True, editable=False, primary_key=True, serialize=False, unique=True)),
                ('Type', models.TextField(null=True)),
                ('FileName', models.TextField(null=True)),
                ('LoopingUse', models.IntegerField(null=True)),
                ('Desc', models.TextField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Transform',
            fields=[
                ('ID', models.IntegerField(auto_created=True, editable=False, primary_key=True, serialize=False, unique=True)),
                ('Type', models.IntegerField(null=True)),
                ('Name', models.TextField(null=True)),
                ('PositionX', models.FloatField(null=True)),
                ('PositionY', models.FloatField(null=True)),
                ('PositionZ', models.FloatField(null=True)),
                ('RotationX', models.FloatField(null=True)),
                ('RotationY', models.FloatField(null=True)),
                ('RotationZ', models.FloatField(null=True)),
                ('ScaleX', models.FloatField(null=True)),
                ('ScaleY', models.FloatField(null=True)),
                ('ScaleZ', models.FloatField(null=True)),
                ('Desc', models.TextField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='XREvent',
            fields=[
                ('ID', models.IntegerField(auto_created=True, editable=False, primary_key=True, serialize=False, unique=True)),
                ('Type', models.IntegerField(null=True)),
                ('Action', models.TextField(null=True)),
                ('Target', models.TextField(null=True)),
                ('Contents', models.TextField(null=True)),
                ('StartDelay', models.FloatField(null=True)),
                ('NextDelay', models.FloatField(null=True)),
                ('NextID', models.PositiveIntegerField(null=True)),
                ('Desc', models.TextField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SeparatedScenario',
            fields=[
                ('ID', models.IntegerField(auto_created=True, editable=False, primary_key=True, serialize=False, unique=True)),
                ('Category', models.JSONField()),
                ('Facility', models.IntegerField(choices=[('Global', 0), ('MultiUseFacility', 1), ('ComplexFacility', 2), ('ElderlyFacility', 3), ('UndergroundFacility', 4)], default=0)),
                ('Version', models.IntegerField(null=True)),
                ('Title', models.TextField(null=True)),
                ('Description', models.TextField(null=True)),
                ('UseParentFDS', models.IntegerField(null=True)),
                ('FDS', models.PositiveIntegerField(null=True)),
                ('FDSStartDelay', models.FloatField(null=True)),
                ('UseParentDaylight', models.IntegerField(null=True)),
                ('DaylightTime', models.FloatField(null=True)),
                ('Timeout', models.FloatField(null=True)),
                ('Evaluations', models.ManyToManyField(blank=True, to='firexr.evaluation')),
                ('XREvents', models.ManyToManyField(blank=True, to='firexr.xrevent')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ObjectInfo',
            fields=[
                ('ID', models.IntegerField(auto_created=True, editable=False, primary_key=True, serialize=False, unique=True)),
                ('Name', models.TextField(null=True)),
                ('Facility', models.IntegerField(null=True)),
                ('Type', models.TextField(null=True)),
                ('FileName', models.TextField(null=True)),
                ('ActivatedEventDelay', models.FloatField(null=True)),
                ('Desc', models.TextField(null=True)),
                ('ActivateObjects', models.ManyToManyField(blank=True, related_name='activate_objects', to='firexr.objectinfo')),
                ('DeactivateObjects', models.ManyToManyField(blank=True, related_name='deactivate_objects', to='firexr.objectinfo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InteractionPoint',
            fields=[
                ('ID', models.IntegerField(auto_created=True, editable=False, primary_key=True, serialize=False, unique=True)),
                ('Facility', models.IntegerField(choices=[('Global', 0), ('MultiUseFacility', 1), ('ComplexFacility', 2), ('ElderlyFacility', 3), ('UndergroundFacility', 4)], default=0)),
                ('Type', models.TextField(null=True)),
                ('Contents', models.TextField(null=True)),
                ('Desc', models.TextField(null=True)),
                ('Transform', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='InteractionPoint_Transform', to='firexr.transform')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FDS',
            fields=[
                ('ID', models.IntegerField(auto_created=True, editable=False, primary_key=True, serialize=False, unique=True)),
                ('Facility', models.IntegerField(null=True)),
                ('Desc', models.TextField(null=True)),
                ('FDSFileID', models.ManyToManyField(blank=True, to='firexr.fdsfile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='evaluation',
            name='EvaluationActions',
            field=models.ManyToManyField(blank=True, to='firexr.evaluationaction'),
        ),
        migrations.CreateModel(
            name='CombinedScenario',
            fields=[
                ('ID', models.IntegerField(auto_created=True, editable=False, primary_key=True, serialize=False, unique=True)),
                ('Facility', models.IntegerField(choices=[('Global', 0), ('MultiUseFacility', 1), ('ComplexFacility', 2), ('ElderlyFacility', 3), ('UndergroundFacility', 4)], default=0)),
                ('Version', models.IntegerField(null=True)),
                ('Title', models.TextField(null=True)),
                ('Description', models.TextField(null=True)),
                ('FDS', models.PositiveIntegerField(null=True)),
                ('FDSStartDelay', models.FloatField(null=True)),
                ('DaylightTime', models.FloatField(null=True)),
                ('Scenarios', models.ManyToManyField(blank=True, related_name='combined_scenario', to='firexr.separatedscenario')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
